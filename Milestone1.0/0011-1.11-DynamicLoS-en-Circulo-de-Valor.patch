From 16326f85fc857e80bb7eab04c9841bf8586e45b4 Mon Sep 17 00:00:00 2001
From: Eilo <eilo2518@gmail.com>
Date: Sat, 24 Dec 2011 18:09:51 -0500
Subject: [PATCH 11/25] 1.11 DynamicLoS en Circulo de Valor

---
 .../game/Battlegrounds/Zones/BattlegroundRV.cpp    |   36 ++++++++++++++++++++
 .../game/Battlegrounds/Zones/BattlegroundRV.h      |    7 ++++
 2 files changed, 43 insertions(+), 0 deletions(-)

diff --git a/src/server/game/Battlegrounds/Zones/BattlegroundRV.cpp b/src/server/game/Battlegrounds/Zones/BattlegroundRV.cpp
index 539419d..671f5a7 100755
--- a/src/server/game/Battlegrounds/Zones/BattlegroundRV.cpp
+++ b/src/server/game/Battlegrounds/Zones/BattlegroundRV.cpp
@@ -65,6 +65,7 @@ void BattlegroundRV::PostUpdateImpl(uint32 diff)
                     DoorOpen(i);
                 setTimer(BG_RV_PILAR_TO_FIRE_TIMER);
                 setState(BG_RV_STATE_OPEN_FIRE);
+                SwitchDynLos();
                 break;
             case BG_RV_STATE_OPEN_FIRE:
                 // FIXME: after 3.2.0 it's only decorative and should be opened only one time at battle start
@@ -78,6 +79,7 @@ void BattlegroundRV::PostUpdateImpl(uint32 diff)
                     DoorOpen(i);
                 setTimer(BG_RV_PILAR_TO_FIRE_TIMER);
                 setState(BG_RV_STATE_CLOSE_FIRE);
+                SwitchDynLos();
                 break;
         }
     }
@@ -100,6 +102,16 @@ void BattlegroundRV::StartingEventOpenDoors()
 
     setState(BG_RV_STATE_OPEN_FENCES);
     setTimer(BG_RV_FIRST_TIMER);
+
+    // Add all DynLoS to the map
+    m_DynLos[0] = GetBgMap()->AddDynLOSObject(763.632385f, -306.162384f, 25.909504f, BG_RV_PILLAR_SMALL_RADIUS, BG_RV_PILLAR_SMALL_HEIGHT);
+    m_DynLos[1] = GetBgMap()->AddDynLOSObject(763.611145f, -261.856750f, 25.909504f, BG_RV_PILLAR_SMALL_RADIUS, BG_RV_PILLAR_SMALL_HEIGHT);
+    m_DynLos[2] = GetBgMap()->AddDynLOSObject(723.644287f, -284.493256f, 24.648525f, BG_RV_PILLAR_BIG_RADIUS, BG_RV_PILLAR_BIG_RADIUS);
+    m_DynLos[3] = GetBgMap()->AddDynLOSObject(802.211609f, -284.493256f, 24.648525f, BG_RV_PILLAR_BIG_RADIUS, BG_RV_PILLAR_BIG_HEIGHT);
+
+    // Activate the small ones
+    for (uint8 i = 0; i <= 1; i++)
+        GetBgMap()->SetDynLOSObjectState(m_DynLos[i], true);
 }
 
 void BattlegroundRV::AddPlayer(Player* player)
@@ -221,3 +233,27 @@ bool BattlegroundRV::SetupBattleground()
     }
     return true;
 }
+
+void BattlegroundRV::SwitchDynLos()
+{
+    // switch all DynLos to the opposite state
+    for (uint8 i = 0; i <= 3; i++)
+        GetBgMap()->SetDynLOSObjectState(m_DynLos[i], !GetBgMap()->GetDynLOSObjectState(m_DynLos[i]));
+
+    // Force every pillar to update their status to players
+    for (BattlegroundPlayerMap::const_iterator itr = GetPlayers().begin(); itr != GetPlayers().end(); ++itr)
+    {
+        Player *player = ObjectAccessor::FindPlayer(itr->first);
+        if (!player)
+            continue;
+
+        if(GameObject* pilar = GetBGObject(BG_RV_OBJECT_PILAR_1))
+            pilar->SendUpdateToPlayer(player);
+        if(GameObject* pilar = GetBGObject(BG_RV_OBJECT_PILAR_2))
+            pilar->SendUpdateToPlayer(player);
+        if(GameObject* pilar = GetBGObject(BG_RV_OBJECT_PILAR_3))
+            pilar->SendUpdateToPlayer(player);
+        if(GameObject* pilar = GetBGObject(BG_RV_OBJECT_PILAR_4))
+            pilar->SendUpdateToPlayer(player);
+    }
+}
diff --git a/src/server/game/Battlegrounds/Zones/BattlegroundRV.h b/src/server/game/Battlegrounds/Zones/BattlegroundRV.h
index 4f99af2..f8e75a0 100755
--- a/src/server/game/Battlegrounds/Zones/BattlegroundRV.h
+++ b/src/server/game/Battlegrounds/Zones/BattlegroundRV.h
@@ -91,6 +91,11 @@ enum BattlegroundRVData
     BG_RV_WORLD_STATE                            = 0xe1a,
 };
 
+#define BG_RV_PILLAR_SMALL_RADIUS  2.0f
+#define BG_RV_PILLAR_SMALL_HEIGHT  5.0f
+#define BG_RV_PILLAR_BIG_RADIUS    4.0f
+#define BG_RV_PILLAR_BIG_HEIGHT    8.25f
+
 class BattlegroundRVScore : public BattlegroundScore
 {
     public:
@@ -122,8 +127,10 @@ class BattlegroundRV : public Battleground
         uint32 State;
 
         virtual void PostUpdateImpl(uint32 diff);
+        virtual void SwitchDynLos();
 
     protected:
+        uint32 m_DynLos[4];
         uint32 getTimer() { return Timer; };
         void setTimer(uint32 timer) { Timer = timer; };
 
-- 
1.7.8.msysgit.0

